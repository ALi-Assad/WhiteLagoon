// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteLagoon.Infrastructure.Data;

#nullable disable

namespace WhiteLagoon.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VillaId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hotel With pool",
                            Name = "Hotel",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "School with bus",
                            Name = "School",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "football field",
                            Name = "Football field",
                            VillaId = 3
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descreption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5928),
                            Descreption = "A beautiful villa with a stunning sunset view.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "Sunset Villa",
                            Occupancy = 4,
                            Price = 250.0,
                            Sqft = 1500,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5943)
                        },
                        new
                        {
                            Id = 2,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5947),
                            Descreption = "A cozy retreat in the mountains.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "Mountain Retreat",
                            Occupancy = 6,
                            Price = 300.0,
                            Sqft = 2000,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5948)
                        },
                        new
                        {
                            Id = 3,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5950),
                            Descreption = "A charming bungalow right on the beach.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "Beachfront Bungalow",
                            Occupancy = 5,
                            Price = 400.0,
                            Sqft = 1800,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5951)
                        },
                        new
                        {
                            Id = 4,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5954),
                            Descreption = "A modern loft with a view of the city lights.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "City Lights Loft",
                            Occupancy = 3,
                            Price = 350.0,
                            Sqft = 1200,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5954)
                        },
                        new
                        {
                            Id = 5,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5957),
                            Descreption = "A quaint cottage in the countryside.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "Countryside Cottage",
                            Occupancy = 4,
                            Price = 200.0,
                            Sqft = 1400,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5957)
                        },
                        new
                        {
                            Id = 6,
                            Created_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5960),
                            Descreption = "A luxurious lodge with a view of the lake.",
                            ImageUrl = "https://placehold.co/600x401",
                            Name = "Lakeview Lodge",
                            Occupancy = 8,
                            Price = 450.0,
                            Sqft = 2200,
                            Updated_Date = new DateTime(2024, 10, 1, 13, 51, 47, 829, DateTimeKind.Local).AddTicks(5961)
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.Property<int>("Villa_Number")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Villa_Number");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumbers");

                    b.HasData(
                        new
                        {
                            Villa_Number = 101,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 102,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 103,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 201,
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 202,
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 203,
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 301,
                            VillaId = 3
                        },
                        new
                        {
                            Villa_Number = 302,
                            VillaId = 3
                        },
                        new
                        {
                            Villa_Number = 303,
                            VillaId = 3
                        },
                        new
                        {
                            Villa_Number = 401,
                            VillaId = 4
                        },
                        new
                        {
                            Villa_Number = 402,
                            VillaId = 4
                        },
                        new
                        {
                            Villa_Number = 403,
                            VillaId = 4
                        },
                        new
                        {
                            Villa_Number = 501,
                            VillaId = 5
                        },
                        new
                        {
                            Villa_Number = 502,
                            VillaId = 5
                        },
                        new
                        {
                            Villa_Number = 503,
                            VillaId = 5
                        },
                        new
                        {
                            Villa_Number = 601,
                            VillaId = 6
                        },
                        new
                        {
                            Villa_Number = 602,
                            VillaId = 6
                        },
                        new
                        {
                            Villa_Number = 603,
                            VillaId = 6
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
